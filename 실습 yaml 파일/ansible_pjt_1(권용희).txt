# Web server playbook
- name: Web server setting
  hosts: CC
  tags: web
  gather_facts: no
  become: yes
  vars:
    pkg_list:
    - apache2
    - python3-apt
    - python3-pymysql
    - mysql-client
    php_list:
    - php-mysql
    - php7.4-fpm
    - php7.4-common
    - php7.4-mysql
    - php7.4-xml
    - php7.4-xmlrpc
    - php7.4-curl
    - php7.4-gd
    - php7.4-imagick
    - php7.4-cli
    - php7.4-dev
    - php7.4-imap
    - php7.4-mbstring
    - php7.4-opcache
    - php7.4-redis
    - php7.4-soap
    - php7.4-zip
    - php7.4-intl
    - libapache2-mod-php

  tasks:
  - name: dpkg config
    command: sudo dpkg --configure -a

  - name: Upgrade apt
    apt:
      upgrade: 'yes'

  - name: Install pkg
    apt:
      name: "{{ pkg_list }}"
      state: latest
      update_cache: yes

  - name: Start apache2
    service:
      name: apache2
      state: started
      enabled: yes

  - name: Add apt repository
    ansible.builtin.apt_repository:
      repo: 'ppa:ondrej/php'

  - name: Upgrade apt
    apt:
      upgrade: 'yes'
      update_cache: yes

  - name: Install php
    apt:
      name: "{{ php_list }}"
      state: present
      update_cache: yes

  - name: Open firewall
    ufw:
      rule: allow
      port: "{{ item }}"
      proto: tcp
    loop: ['3306','80']

  - name: Restart module
    service:
      name: apache2
      state: restarted

  - name: Get url
    get_url:
      url: https://wordpress.org/latest.tar.gz
      dest: /tmp/wordpress.tar.gz

  - name: unzip
    unarchive:
      src: /tmp/wordpress.tar.gz
      remote_src: true
      dest: /var/www/html

  - name: Copy config-sample.php
    copy:
      src: /var/www/html/wordpress/wp-config-sample.php
      dest: /var/www/html/wordpress/wp-config.php
      remote_src: yes

  - name: Put database name in wp-config.php
    replace:
      path: /var/www/html/wordpress/wp-config.php
      regexp: database_name_here
      replace: wordpress

  - name: Put username in wp-config.php
    replace:
      path: /var/www/html/wordpress/wp-config.php
      regexp: username_here
      replace: admin

  - name: Put password in wp-config.php
    replace:
      path: /var/www/html/wordpress/wp-config.php
      regexp: password_here
      replace: dkaghdkagh1.

  - name: Put localhost in wp-config.php
    replace:
      path: /var/www/html/wordpress/wp-config.php
      regexp: localhost
      replace: 192.168.56.22

  - name: Restart module
    service:
      name: apache2
      state: restarted


# DB
- name: DB setting
  hosts: ansi-node2
  gather_facts: yes
  tags: db
  vars:
    pkg_list:
    - python3-pymysql
    - mysql-server
    - mysql-client
  tasks:
  - name: Update
    apt:
      upgrade: yes

  - name: Install Pkgs
    apt:
      name: "{{ pkg_list }}"
      update_cache: yes
      cache_valid_time: 3600
      state: latest

  - name: Start Mysql
    service:
      name: mysql
      state: started
      enabled: yes

  - mysql_user:
      name: root
      password: "dkaghdkagh1."
      priv: "*.*:ALL,GRANT"
      host: 'localhost'
      login_unix_socket: /var/run/mysqld/mysqld.sock
      state: present
      login_user: root
      login_password: "dkaghdkagh1."

  - template:
      src: root_cnf.j2
      dest: /root/.my.cnf
      owner: root
      mode: '0600'

  - lineinfile:
      path: /etc/mysql/mysql.conf.d/mysqld.cnf
      regexp: '^bind-address'
      line: 'bind-address = 0.0.0.0'
      backup: yes
    notify:
      - Restart mysql

  - name: Deletes anonymous MySQL server user for ansible_fqdn
    mysql_user:
      user: ''
      host_all: true
      state: absent

  - name: Deletes anonymous MySQL server user for localhost
    mysql_user:
      user: ''
      state: absent

  - name: Secures the MySQL root user for IPV6 localhost (::1)
    mysql_user:
      user: root
      password: "dkaghdkagh1."
      host: "::1"
    no_log: yes

  - name: Secures the MySQL root user for IPV4 localhost (127.0.0.1)
    mysql_user:
      user: root
      password: "dkaghdkagh1."
      host: "127.0.0.1"
    no_log: yes

  - name: Secures the MySQL root user for localhost domain (localhost)
    mysql_user:
      user: root
      password: "dkaghdkagh1."
      host: "localhost"
    no_log: yes

  - name: Secures the MySQL root user for server_hostname domain
    mysql_user:
      user: root
      password: "dkaghdkagh1."
      host: "%"
    no_log: yes

  - name: Remove the MySQL test database
    mysql_db:
      name: test
      state: absent
      login_user: root
      login_password: "dkaghdkagh1."

  - name: Creates database for Guestbook
    mysql_db:
      name: "wordpress"
      state: present
      login_user: root
      login_password: "dkaghdkagh1."

  - name: Create MySQL user for Guestbook
    mysql_user:
      name: "admin"
      password: "dkaghdkagh1."
      priv: "wordpress.*:ALL"
      host: '%'
      state: present
      login_user: root
      login_password: "dkaghdkagh1."

  - name: Open firewall
    ufw:
      port: "3306"
      proto: tcp
      rule: allow

  handlers:
    - name: Restart mysql
      service:
        name: mysql
        state: restarted


